apiVersion: apps/v1
kind: Deployment
metadata:
  name: k6-test-api
spec:
  template:
    spec:
      serviceAccountName: k6-test-api
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: node
        whenUnsatisfiable: ScheduleAnyway
      containers:
      - name: k6-test-api
        image: loadimpact/test-api.k6.io:latest
        imagePullPolicy: IfNotPresent
        # securityContext:
        #   # runAsNonRoot: true
        #   allowPrivilegeEscalation: false
        #   readOnlyRootFilesystem: true
        #   capabilities:
        #     drop:
        #       - NET_RAW

        ports:
        - containerPort: 8000

        env:
        - name: LOADIMPACT_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: k6-test-api
              key: envName

        - name: ROOT_URLCONF
          valueFrom:
            configMapKeyRef:
              name: k6-test-api
              key: rootURLConf

        - name: DB_ENGINE
          valueFrom:
            secretKeyRef:
              name: k6-test-api
              key: dbEngine

        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: k6-test-api
              key: dbName

        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: k6-test-api
              key: dbPassword

        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: k6-test-api
              key: dbUser

        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: k6-test-api
              key: dbHost

        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: k6-test-api
              key: dbPort

        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: k6-test-api
              key: djangoSecretKey

        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: k6-test-api
              key: sentryDSN

        resources:
          requests:
            memory: "128Mi"
            cpu: "125m"
          limits:
            memory: "512Mi"
            cpu: "400m"

        # livenessProbe:
        #   httpGet:
        #     path: /
        #     port: 8000
        #   initialDelaySeconds: 10
        #   timeoutSeconds: 60

        # readinessProbe:
        #   httpGet:
        #     path: /
        #     port: 8000
        #   initialDelaySeconds: 10
        #   timeoutSeconds: 60
